// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'optional.notnull', kind: "module", path: './optional/notnull.html', attributes: []},
{name: 'optional.notnull.notNull', kind: "functiondeclaration", path: './optional/notnull/notNull.html', attributes: ["auto"]},
{name: 'optional.notnull.NotNull', kind: "structdeclaration", path: './optional/notnull/NotNull.html', attributes: []},
{name: 'optional.notnull.NotNull.opAssign', kind: "functiondeclaration", path: './optional/notnull/NotNull.opAssign.html', attributes: []},
{name: 'optional.notnull.NotNull.this', kind: "functiondeclaration", path: './optional/notnull/NotNull.this.html', attributes: []},
{name: 'optional.optional', kind: "module", path: './optional/optional.html', attributes: []},
{name: 'optional.optional.match', kind: "templatedeclaration", path: './optional/optional/match.html', attributes: []},
{name: 'optional.optional.match.match', kind: "functiondeclaration", path: './optional/optional/match.match.html', attributes: ["auto", "ref"]},
{name: 'optional.optional.no', kind: "functiondeclaration", path: './optional/optional/no.html', attributes: ["auto"]},
{name: 'optional.optional.none', kind: "variabledeclaration", path: './optional/optional/none.html', attributes: []},
{name: 'optional.optional.Optional', kind: "structdeclaration", path: './optional/optional/Optional.html', attributes: []},
{name: 'optional.optional.Optional.construct', kind: "functiondeclaration", path: './optional/optional/Optional.construct.html', attributes: []},
{name: 'optional.optional.Optional.dispatch', kind: "functiondeclaration", path: './optional/optional/Optional.dispatch.html', attributes: ["auto", "inout"]},
{name: 'optional.optional.Optional.opAssign', kind: "functiondeclaration", path: './optional/optional/Optional.opAssign.html', attributes: []},
{name: 'optional.optional.Optional.opBinary', kind: "functiondeclaration", path: './optional/optional/Optional.opBinary.html', attributes: ["auto", "ref"]},
{name: 'optional.optional.Optional.opBinaryRight', kind: "functiondeclaration", path: './optional/optional/Optional.opBinaryRight.html', attributes: ["auto", "ref"]},
{name: 'optional.optional.Optional.opCall', kind: "functiondeclaration", path: './optional/optional/Optional.opCall.html', attributes: ["auto", "ref"]},
{name: 'optional.optional.Optional.opEquals', kind: "functiondeclaration", path: './optional/optional/Optional.opEquals.html', attributes: ["const"]},
{name: 'optional.optional.Optional.opUnary', kind: "functiondeclaration", path: './optional/optional/Optional.opUnary.html', attributes: ["auto", "ref"]},
{name: 'optional.optional.Optional.this', kind: "functiondeclaration", path: './optional/optional/Optional.this.html', attributes: []},
{name: 'optional.optional.Optional.toString', kind: "functiondeclaration", path: './optional/optional/Optional.toString.html', attributes: ["const"]},
{name: 'optional.optional.orElse', kind: "functiondeclaration", path: './optional/optional/orElse.html', attributes: ["auto", "ref"]},
{name: 'optional.optional.some', kind: "functiondeclaration", path: './optional/optional/some.html', attributes: ["auto", "ref"]},
{name: 'optional.optional.unwrap', kind: "functiondeclaration", path: './optional/optional/unwrap.html', attributes: ["auto", "ref"]},
{name: 'optional.traits', kind: "module", path: './optional/traits.html', attributes: []},
{name: 'optional.traits.isNotNull', kind: "enummemberdeclaration", path: './optional/traits/isNotNull.html', attributes: []},
{name: 'optional.traits.isOptional', kind: "enummemberdeclaration", path: './optional/traits/isOptional.html', attributes: []},
{name: 'optional.traits.OptionalTarget', kind: "aliasdeclaration", path: './optional/traits/OptionalTarget.html', attributes: []},
{name: 'optional', kind: "module", path: './optional.html', attributes: []},
];
